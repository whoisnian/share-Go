name: release

on:
  push:
    tags: ["v*"]

jobs:
  build-static-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: fe/package-lock.json

      - name: Install npm dependencies
        run: npm ci
        working-directory: fe

      - name: Build fe
        run: npm run build
        working-directory: fe

      - name: Set up golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          check-latest: true
          cache: true

      - name: Build static binaries
        run: bash .github/build.sh all

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: share-Go-*

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: fe/package-lock.json

      - name: Install npm dependencies
        run: npm ci
        working-directory: fe

      - name: Build fe
        run: npm run build
        working-directory: fe

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for image
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
